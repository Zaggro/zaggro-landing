name: CI
on: push

env:
  DOCKER_PKG: ghcr.io/zaggro/zaggro-landing/web
  DEPLOYMENT_NAME: zaggro-landing
  ZAGENV: staging

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: Install dependencies
        run: yarn

      - name: Run lint
        run: yarn lint

  build:
    name: Build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Identify build tag
        run: echo "TAG=$(echo $GITHUB_SHA | head -c7)" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.DOCKER_PKG }}:${{ env.ZAGENV }}-${{ env.TAG }},${{ env.DOCKER_PKG }}:${{ env.ZAGENV }}-latest
          cache-from: type=registry,ref=${{ env.DOCKER_PKG}}:${{ env.ZAGENV }}-latest
          cache-to: type=inline
          secrets: |
            github_token=${{ secrets.GITHUB_TOKEN }}
            zagenv=${{ env.ZAGENV }}

  deploy:
    name: Trigger deployment
    needs: [check, build]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Identify build tag
        run: echo "TAG=$(echo $GITHUB_SHA | head -c7)" >> $GITHUB_ENV

      - name: Trigger deployment
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_TOKEN }}
          repository: actafi/kubernetes-dev
          event-type: Deploy service
          client-payload: >-
            {
              "deployment_name": "${{ env.DEPLOYMENT_NAME }}",
              "github_repository": "${{ github.repository }}",
              "acta_env": "${{ env.ZAGENV }}",
              "docker_pkg": "${{ env.DOCKER_PKG }}",
              "tag": "${{ env.TAG }}",
              "actor": "${{ github.actor }}",
              "namespace": "adafi"
            }
